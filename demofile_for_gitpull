pipeline {
    agent any

    parameters {
        string(name: 'TAG_NAME', defaultValue: '', description: 'Enter the tag name')
        string(name: 'BRANCH_NAME', defaultValue: 'master', description: 'Enter the branch name')
    }

    environment {
        GIT_HOME = "/home/beast9949/git"
        GIT_URL = "https://beast9949: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github.com/beast9949/git_automation.git"
    }

    stages {
        stage('Pull and push from GitHub') {
            steps {
                script {
                    sh '''
                        whoami
                        cd /yogi/git_automation
                        ls -lsrt
                        # git config --global --add safe.directory /yogi/git_automation
                        git branch
                        git stash
                    '''

                    if (BRANCH_NAME != "master" || BRANCH_NAME != "") {
                        sh 'git pull'
                    } else {
                        sh "git pull origin $BRANCH_NAME"
                    }
                }
            }
        }

        stage('Git checkout') {
            steps {
                script {
                    sh '''
                        cd /yogi/git_automation
                        if [ "$BRANCH_NAME" != "master" ]; then
                            git checkout $BRANCH_NAME
                        fi
                    '''
                }
            }
        }

        stage('Pull and push from GitHub (master Branch)') {
            steps {
                sh '''
                    cd /yogi/git_automation
                    git pull origin master
                '''
            }
        }

        stage('Create and push a tag') {
            steps {
                script {
                    def userInput = input(
                        id: 'userInput',
                        message: 'Enter the tag name:',
                        parameters: [string(defaultValue:'', description:'Tag Name', name:'TAG_NAME')],
                    )

                    if (userInput.TAG_NAME) {
                        def tagName = userInput.TAG_NAME.trim() // Trim leading/trailing spaces

                        // Change to the repository directory
                        dir('/yogi/git_automation') {
                            // Create an annotated tag with a message
                            sh "git tag -a ${tagName} -m 'Version ${tagName}'"
                            // Push the created tag to the remote repository
                            sh "git push origin ${tagName}"
                        }
                    } else {
                        error('Tag name not provided. Tagging aborted.')
                    }
                }
            }
        }

        stage('Pull a tag') {
            steps {
                sh '''
                    cd /yogi/git_automation
                    git fetch --tags
                    git checkout ${TAG_NAME}
                '''
            }
        }
    }
}
